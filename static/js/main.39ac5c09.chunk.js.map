{"version":3,"sources":["PublicMembers.js","Members.js","Organization.js","User.js","App.js","serviceWorker.js","index.js"],"names":["PublicMembers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","publicMembers","_this2","fetch","outsideCollaborators","then","result","json","data","setState","react_default","a","createElement","id","className","map","member","key","Math","random","src","avatar_url","alt","login","entries","el","style","color","React","Component","Members","members","memberUrl","Fragment","avatar","organizationInfo","org","src_PublicMembers","filter","slice","Organisation","searchClick","event","target","closest","item","textContent","organizationsList","organizationsNamesList","onClick","src_Members","User","userInfo","App","searchChange","organization","value","searchSubmit","preventDefault","prevState","isUserHidden","isOrganizationHidden","indexOf","toLowerCase","userChange","user","userSubmit","usersData","error","alert","onSubmit","name","placeholder","onChange","src_User","display","Organization","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39ac5c09.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass PublicMembers extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        publicMembers: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    fetch(this.props.outsideCollaborators)\r\n      .then(result => result.json())\r\n      .then(data => (\r\n        this.setState({\r\n          publicMembers: data\r\n        })\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"outside-collaborators\" className=\"info\">\r\n        <h3>Outside collaborators</h3>\r\n        {\r\n          this.state.publicMembers.map((member) => (\r\n            <div className=\"member-info\" key={Math.random()}>\r\n              <img src={member.avatar_url} alt={member.login}/>\r\n              <table>\r\n                <tbody>\r\n                  {\r\n                    Object.entries(member).map(el =>\r\n                      <tr key={Math.random()}>\r\n                        <td key={Math.random()} style={{color: \"blue\"}}>{el[0]}</td>\r\n                        <td key={Math.random()}>{el[1]}</td>\r\n                      </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PublicMembers\r\n","import React from \"react\";\r\nimport PublicMembers from \"./PublicMembers\";\r\n\r\nclass Members extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        members: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    fetch(this.props.memberUrl)\r\n    .then(result => result.json())\r\n    .then(data => (\r\n        this.setState({\r\n          members: data\r\n        })\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"org-info\" className=\"info\">\r\n          <h3>About organization</h3>\r\n          <img src={this.props.avatar} alt=\"org-logo\" />\r\n          <table>\r\n            <tbody>\r\n              {\r\n                this.props.organizationInfo.map(org => (\r\n                  <tr key={Math.random()}>\r\n                    <td key={Math.random()} style={{color: \"blue\"}}>{org[0]}</td>\r\n                    <td key={Math.random()}>{org[1]}</td>\r\n                  </tr>         \r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div id=\"members\" className=\"info\">\r\n          <h3>List of members</h3>\r\n            {\r\n              this.state.members.map((member) => (\r\n                <div className=\"member-info\" key={Math.random()}>\r\n                  <img src={member.avatar_url} alt={member.login}/>\r\n                  <table>\r\n                    <tbody>\r\n                      {\r\n                        Object.entries(member).map(el =>\r\n                          <tr key={Math.random()}>\r\n                            <td key={Math.random()} style={{color: \"blue\"}}>{el[0]}</td>\r\n                            <td key={Math.random()}>{el[1]}</td>\r\n                          </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ))\r\n            }\r\n        </div>\r\n        <PublicMembers outsideCollaborators={this.props.organizationInfo.filter(el => el[0] === \"public_members_url\").map(el => el[1].slice(0, -9))} />\r\n      </React.Fragment>\r\n        )\r\n  }\r\n}\r\n\r\nexport default Members\r\n","import React from \"react\";\r\nimport Members from \"./Members\"\r\n\r\nclass Organisation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      organizationInfo: []\r\n    }\r\n  }\r\n\r\n  searchClick = (event) => {\r\n    event.target = event.target.closest(\"li\");\r\n    const item = event.target.textContent;\r\n    this.setState({\r\n      organizationInfo: Object.entries(this.props.organizationsList.filter(el => el.login === item)[0])\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"organization-div\" style={this.props.style}>\r\n        <ul id=\"organization-list\">\r\n          <h3>Search results</h3>\r\n            {\r\n              this.props.organizationsNamesList.map(org => (\r\n                <li key={org} onClick={this.searchClick} >{org}</li>\r\n              ))\r\n            }\r\n        </ul>\r\n        <Members\r\n        organizationInfo={this.state.organizationInfo}\r\n        avatar={this.state.organizationInfo.filter(el => el[0] === \"avatar_url\").map(el => el[1])}\r\n        memberUrl={this.state.organizationInfo.filter(el => el[0] === \"members_url\").map(el => el[1].slice(0, -9))} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Organisation\r\n","import React from \"react\";\r\n\r\nclass User extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <div id=\"user-info\" style={this.props.style} className=\"info\">\r\n          <h3>About user</h3>\r\n          <img src={this.props.avatar} alt={this.props.userInfo.login} />\r\n          <table>\r\n            <tbody>\r\n              {\r\n                Object.entries(this.props.userInfo).map(el => (\r\n                  <tr key={Math.random()}>\r\n                    <td style={{color: \"blue\"}} key={Math.random()}>{el[0]}</td>\r\n                    <td key={Math.random()}>{el[1]}</td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User\r\n","import React from \"react\";\r\nimport Organization from \"./Organization\";\r\nimport User from \"./User\"\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n    organization: \"\",\r\n    organizationsList: [],\r\n    organizationsNamesList: [],\r\n    user: \"\",\r\n    userInfo: [],\r\n    usersData: [],\r\n    isUserHidden: true,\r\n    isOrganizationHidden: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.github.com/organizations\")\r\n    .then(result => result.json())\r\n    .then(\r\n      data => {\r\n        this.setState({\r\n          organizationsList: data\r\n        })\r\n      },\r\n      error => {\r\n        alert(\"Wrong name!\")\r\n      }\r\n    )\r\n    fetch(\"https://api.github.com/users\")\r\n    .then(result => result.json())\r\n    .then(data => this.setState({\r\n      usersData: data\r\n    }))\r\n  }\r\n\r\n  searchChange = (event) => {\r\n    this.setState({\r\n      organization: event.target.value\r\n    })\r\n  }\r\n\r\n  searchSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState( prevState => {\r\n      return({\r\n        isUserHidden: true,\r\n        isOrganizationHidden: false,\r\n        organizationsNamesList: prevState.organizationsList\r\n        .filter(el => el.login.indexOf(this.state.organization.toLowerCase()) !== -1)\r\n        .map(el => el.login)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  userChange = (event) => {\r\n    this.setState({\r\n      user: event.target.value\r\n    })\r\n  }\r\n\r\n  userSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState(prevState => {\r\n      return ({\r\n        isUserHidden: false,\r\n        isOrganizationHidden: true,\r\n        userInfo: prevState.usersData.filter(el => el.login === prevState.user)[0],\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <form id=\"search-form\" onSubmit={this.searchSubmit} >\r\n            <input\r\n            id=\"organization-search\"\r\n            name=\"organization\"\r\n            value={this.state.organization}\r\n            placeholder=\"Input the  name of organization\"\r\n            onChange={this.searchChange} />\r\n          </form>\r\n          <form id=\"user-form\" onSubmit={this.userSubmit} >\r\n            <input\r\n            id=\"user-search\"\r\n            name=\"user\"\r\n            value={this.state.user}\r\n            placeholder=\"Input the username\"\r\n            onChange={this.userChange} />\r\n          </form>\r\n        </header>\r\n        <User\r\n        style={(this.state.isUserHidden) ? {display: \"none\"} : {display: \"flex\"}}\r\n        avatar={this.state.userInfo.avatar_url}\r\n        userInfo={this.state.userInfo} />\r\n        <Organization\r\n        style={(this.state.isOrganizationHidden) ? {display: \"none\"} : {display: \"flex\"}}\r\n        organizationsNamesList={this.state.organizationsNamesList}\r\n        organizationsList={this.state.organizationsList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}